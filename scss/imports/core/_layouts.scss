@-ms-viewport {
    width: device-width;
}
* {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
    box-sizing: border-box;
}
html {
    font-size: 62.5%; // => 10px = 1rem
    scroll-behavior: smooth;
}
body {
    width: 100%;
    max-width: $container-max-width;
    margin: auto;
    @include text(1.2rem, utm-r, 2rem, $black-cl, none); // tuỳ chỉnh
    background: $white-cl;
    position: relative;

    .container-fluid {
        width: 100%;
        padding-right: var(--gap);
        padding-left: var(--gap);
        margin-right: auto;
        margin-left: auto;
        @include sm {
            padding-right: calc(var(--gap) / 2);
            padding-left: calc(var(--gap) / 2);
        }
    }
    .container {
        width: 100%;
        // padding-right: 0;
        // padding-left: 0;
        padding-right: calc(var(--gap) / 2);
        padding-left: calc(var(--gap) / 2);
        margin-right: auto;
        margin-left: auto;
    }

    @media (min-width: $xxs-min) {
        .container-fluid,
        .container {
            // padding-right: calc(var(--gap) / 2);
            // padding-left: calc(var(--gap) / 2);
            max-width: 54rem;
        }
    }
    @media (min-width: $xs-min) {
        .container-fluid,
        .container {
            max-width: 72rem;
        }
    }
    @media (min-width: $sm-min) {
        .container-fluid {
            max-width: 100%;
        }
        .container {
            max-width: 96rem;
        }
    }
    @media (min-width: $md-min) {
        .container {
            max-width: $container-width;
        }
    }

    .mainwrapper {
        width: 100%;
        margin: auto;
        overflow: hidden;
        @include visible;
    }

    .overlay {
        @include fullscreen(true);
        background: rgba(0, 0, 0, 0.75);
        z-index: var(--z-fixed);
        @include visible(0);
        @include transition($cubic $t);
        &.active {
            @include visible(1);
            @include transition($cubic $t);
        }
    }
    @include lg {
        // CSS responsive large desktop
    }
    @include md {
        // CSS responsive desktop
    }
    @include sm {
        // CSS responsive tablet
    }
    @include xs {
        // CSS responsive mobile
    }
    @include xxs {
        // CSS responsive small mobile
    }
}
